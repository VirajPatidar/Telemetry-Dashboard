import React from "react";
import clsx from 'clsx';
import { makeStyles } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Typography from '@material-ui/core/Typography';
import Gitlink from '../components/Gitlink'
import Container from '@material-ui/core/Container';

const drawerWidth = 240;

const useStyles = makeStyles((theme) => ({
    root: {
        display: 'flex',
    },
    drawerHeader: {
        display: 'flex',
        alignItems: 'center',
        padding: theme.spacing(0, 1),
        // necessary for content to be below app bar
        ...theme.mixins.toolbar,
        justifyContent: 'flex-end',
    },
    content: {
        flexGrow: 1,
        padding: theme.spacing(3),
        transition: theme.transitions.create('margin', {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.leavingScreen,
        }),
        marginLeft: 0,
    },
    contentShift: {
        transition: theme.transitions.create('margin', {
            easing: theme.transitions.easing.easeOut,
            duration: theme.transitions.duration.enteringScreen,
        }),
        marginLeft: drawerWidth,
    },
}));

export default function Home(props) {
  const classes = useStyles();
  return (
    <div className={classes.root}>
            <CssBaseline />
            <Container maxWidth="lg">
              <main className={clsx(classes.content, { [classes.contentShift]: props.open, })}>
                  <div className={classes.drawerHeader} />
                  <Typography variant="h5" gutterBottom>
                    About this Project
                  </Typography>
                  <Typography variant="body1" gutterBottom>
                    This project is built to visually analyse data generated by a telemetry server <br/>
                    A sample api has been built and used to achieve the same. <br/>
                    The source code can be found at: <Gitlink/> <br/>
                    Click the hamurger icon at the top to get started 
                  </Typography>
                    <br/>
                  <Typography variant="h5" gutterBottom>
                    What is Telemetry ?
                  </Typography>
                  <Typography variant="body1" gutterBottom>
                    Telemetry is the automatic recording and transmission of data from remote or inaccessible sources to an IT system in a different location for monitoring and analysis. Telemetry data may be relayed using radio, infrared, ultrasonic, GSM, satellite or cable, depending on the application. 
                    <br/> <br/>
                    In the software development world, telemetry can offer insights on which features end users use most, detection of bugs and issues, and offering better visibility into performance without the need to solicit feedback directly from users.
                    The primary benefit of telemetry is the ability of an end user to monitor the state of an object or environment while physically far removed from it. Once you’ve shipped a product, you can’t be physically present, peering over the shoulders of thousands (or millions) of users as they engage with your product to find out what works, what’s easy, and what’s cumbersome. Thanks to telemetry, those insights can be delivered directly into a dashboard for you to analyze and act on.
                    Because telemetry provides insights into how well your product is working for your end users – as they use it – it’s an incredibly valuable tool for ongoing performance monitoring and management. Plus, you can use the data you’ve gathered from version 1.0 to drive improvements and prioritize updates for your release of version 2.0.
                  </Typography>
              </main>
            </Container>
        </div>
  )
}
